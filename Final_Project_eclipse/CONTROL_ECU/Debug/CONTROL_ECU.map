Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./twi.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./control_ecu.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./control_ecu.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

Door_password       0x5               ./control_ecu.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./buzzer.o
LOAD ./control_ecu.o
LOAD ./external_eeprom.o
LOAD ./gpio.o
LOAD ./motor.o
LOAD ./timer0.o
LOAD ./twi.o
LOAD ./uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x14de
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./buzzer.o
 .text          0x00000092        0x0 ./control_ecu.o
 .text          0x00000092        0x0 ./external_eeprom.o
 .text          0x00000092        0x0 ./gpio.o
 .text          0x00000092        0x0 ./motor.o
 .text          0x00000092        0x0 ./timer0.o
 .text          0x00000092        0x0 ./twi.o
 .text          0x00000092        0x0 ./uart.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.BUZZER_init
                0x00000092       0x18 ./buzzer.o
                0x00000092                BUZZER_init
 .text.BUZZER_on
                0x000000aa       0x18 ./buzzer.o
                0x000000aa                BUZZER_on
 .text.BUZZER_off
                0x000000c2       0x18 ./buzzer.o
                0x000000c2                BUZZER_off
 .text.main     0x000000da       0x56 ./control_ecu.o
                0x000000da                main
 .text.drivers_init
                0x00000130       0xcc ./control_ecu.o
                0x00000130                drivers_init
 .text.recieve_function
                0x000001fc       0x12 ./control_ecu.o
                0x000001fc                recieve_function
 .text.Change_Password
                0x0000020e       0xca ./control_ecu.o
                0x0000020e                Change_Password
 .text.check_first_time
                0x000002d8       0x50 ./control_ecu.o
                0x000002d8                check_first_time
 .text.Check_Password
                0x00000328       0xa2 ./control_ecu.o
                0x00000328                Check_Password
 .text.init_timer
                0x000003ca      0x12e ./control_ecu.o
                0x000003ca                init_timer
 .text.open_door
                0x000004f8       0x74 ./control_ecu.o
                0x000004f8                open_door
 .text.theif_function
                0x0000056c       0x26 ./control_ecu.o
                0x0000056c                theif_function
 .text.alarm_callback
                0x00000592       0x6c ./control_ecu.o
                0x00000592                alarm_callback
 .text.timer_stopmotor
                0x000005fe       0x62 ./control_ecu.o
                0x000005fe                timer_stopmotor
 .text.timer0_processing
                0x00000660       0x68 ./control_ecu.o
                0x00000660                timer0_processing
 .text.EEPROM_writeByte
                0x000006c8       0x82 ./external_eeprom.o
                0x000006c8                EEPROM_writeByte
 .text.EEPROM_readByte
                0x0000074a       0xc0 ./external_eeprom.o
                0x0000074a                EEPROM_readByte
 .text.GPIO_setupPinDirection
                0x0000080a      0x1d6 ./gpio.o
                0x0000080a                GPIO_setupPinDirection
 .text.GPIO_writePin
                0x000009e0      0x1d6 ./gpio.o
                0x000009e0                GPIO_writePin
 .text.GPIO_readPin
                0x00000bb6      0x136 ./gpio.o
                0x00000bb6                GPIO_readPin
 .text.GPIO_setupPortDirection
                0x00000cec       0x88 ./gpio.o
                0x00000cec                GPIO_setupPortDirection
 .text.GPIO_writePort
                0x00000d74       0x88 ./gpio.o
                0x00000d74                GPIO_writePort
 .text.GPIO_readPort
                0x00000dfc       0x8a ./gpio.o
                0x00000dfc                GPIO_readPort
 .text.DcMotor_Init
                0x00000e86       0x36 ./motor.o
                0x00000e86                DcMotor_Init
 .text.DcMotor_Rotate
                0x00000ebc       0x66 ./motor.o
                0x00000ebc                DcMotor_Rotate
 .text.TIMER0_init
                0x00000f22       0xcc ./timer0.o
                0x00000f22                TIMER0_init
 .text.TIMER0_setcallback
                0x00000fee       0x24 ./timer0.o
                0x00000fee                TIMER0_setcallback
 .text.TIMER0_deinit
                0x00001012       0x20 ./timer0.o
                0x00001012                TIMER0_deinit
 .text.__vector_9
                0x00001032       0x66 ./timer0.o
                0x00001032                __vector_9
 .text.__vector_19
                0x00001098       0x66 ./timer0.o
                0x00001098                __vector_19
 .text.TWI_init
                0x000010fe       0x70 ./twi.o
                0x000010fe                TWI_init
 .text.TWI_start
                0x0000116e       0x20 ./twi.o
                0x0000116e                TWI_start
 .text.TWI_stop
                0x0000118e       0x16 ./twi.o
                0x0000118e                TWI_stop
 .text.TWI_writeByte
                0x000011a4       0x2e ./twi.o
                0x000011a4                TWI_writeByte
 .text.TWI_readByteWithACK
                0x000011d2       0x26 ./twi.o
                0x000011d2                TWI_readByteWithACK
 .text.TWI_readByteWithNACK
                0x000011f8       0x26 ./twi.o
                0x000011f8                TWI_readByteWithNACK
 .text.TWI_getStatus
                0x0000121e       0x1e ./twi.o
                0x0000121e                TWI_getStatus
 .text.UART_init
                0x0000123c      0x136 ./uart.o
                0x0000123c                UART_init
 .text.UART_sendByte
                0x00001372       0x2e ./uart.o
                0x00001372                UART_sendByte
 .text.UART_recieveByte
                0x000013a0       0x1e ./uart.o
                0x000013a0                UART_recieveByte
 .text.UART_sendString
                0x000013be       0x52 ./uart.o
                0x000013be                UART_sendString
 .text.UART_recieveString
                0x00001410       0x86 ./uart.o
                0x00001410                UART_recieveString
 .text.libgcc   0x00001496       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00001496                __udivmodsi4
 .text.libgcc   0x000014da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000014da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000014da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000014da                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000014da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000014da                exit
                0x000014da                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000014da        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000014de                _etext = .

.data           0x00800060       0x1c load address 0x000014de
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./buzzer.o
 .data          0x00800060        0x0 ./control_ecu.o
 .data          0x00800060        0x0 ./external_eeprom.o
 .data          0x00800060        0x0 ./gpio.o
 .data          0x00800060        0x0 ./motor.o
 .data          0x00800060        0x0 ./timer0.o
 .data          0x00800060        0x0 ./twi.o
 .data          0x00800060        0x0 ./uart.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.door_flag
                0x00800060        0x1 ./control_ecu.o
                0x00800060                door_flag
 *(.rodata)
 *(.rodata*)
 .rodata.C.2.1435
                0x00800061        0x7 ./control_ecu.o
 .rodata.C.1.1434
                0x00800068        0x5 ./control_ecu.o
 .rodata.C.9.1535
                0x0080006d        0x5 ./control_ecu.o
 .rodata.C.7.1533
                0x00800072        0x5 ./control_ecu.o
 .rodata.C.5.1531
                0x00800077        0x5 ./control_ecu.o
 *(.gnu.linkonce.d*)
                0x0080007c                . = ALIGN (0x2)
                0x0080007c                _edata = .
                0x0080007c                PROVIDE (__data_end, .)

.bss            0x0080007c        0xb
                0x0080007c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x0080007c        0x0 ./buzzer.o
 .bss           0x0080007c        0x0 ./control_ecu.o
 .bss           0x0080007c        0x0 ./external_eeprom.o
 .bss           0x0080007c        0x0 ./gpio.o
 .bss           0x0080007c        0x0 ./motor.o
 .bss           0x0080007c        0x0 ./timer0.o
 .bss           0x0080007c        0x0 ./twi.o
 .bss           0x0080007c        0x0 ./uart.o
 .bss           0x0080007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x0080007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.timer_overflows
                0x0080007c        0x4 ./control_ecu.o
                0x0080007c                timer_overflows
 .bss.callback_ptr
                0x00800080        0x2 ./timer0.o
 *(COMMON)
 COMMON         0x00800082        0x5 ./control_ecu.o
                0x00800082                Door_password
                0x00800087                PROVIDE (__bss_end, .)
                0x000014de                __data_load_start = LOADADDR (.data)
                0x000014fa                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800087        0x0
                0x00800087                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800087                PROVIDE (__noinit_end, .)
                0x00800087                _end = .
                0x00800087                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x23e8
 *(.stab)
 .stab          0x00000000      0x270 ./buzzer.o
 .stab          0x00000270      0xca8 ./control_ecu.o
                                0xd80 (size before relaxing)
 .stab          0x00000f18      0x30c ./external_eeprom.o
                                0x3e4 (size before relaxing)
 .stab          0x00001224      0x5f4 ./gpio.o
                                0x870 (size before relaxing)
 .stab          0x00001818      0x1ec ./motor.o
                                0x2e8 (size before relaxing)
 .stab          0x00001a04      0x300 ./timer0.o
                                0x5ac (size before relaxing)
 .stab          0x00001d04      0x33c ./twi.o
                                0x5b8 (size before relaxing)
 .stab          0x00002040      0x3a8 ./uart.o
                                0x654 (size before relaxing)

.stabstr        0x00000000     0x1317
 *(.stabstr)
 .stabstr       0x00000000     0x1317 ./buzzer.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(CONTROL_ECU.elf elf32-avr)
LOAD linker stubs
